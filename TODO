TEST FIRST!!!

TODO:
	session.rb:
		[]subscribe
			[x]base is done
			[x]add rate plan data
			[]make the call vary by the params hash sent in
		[]amend
			[]make the call
	subsription.rb:
		[x]add the current date to the default fields and add the rest of the default required fields
	Overall:
		a)[] 
		b)[]more models
 		c)[]figure out why savon setup breaks with rake and setting the log
		d)[]test / make it easy to configure with prod
			i)[]the config endpoint does not do anything... make it dynamic
		e)[]move custom fields to a file
		f)[]make each field an attr accesor? / figure out non database ActiveModel backed models ( is it worth it bc zuora is doing the validation, i guess it makes sense to do it before sending and not wasting a soap call, but what if something in the WSDL changes, HOW OFTEN DOES THAT HAPPEN!? i think it makes sense to validate before sending, maybe not zuora does it... this will only really help for mass amounts of traffic like bagillions of people hitting the site at once... would they be using this code at that point, they would probably write their own? )
		g)[]singleton?
		h)[]bulk methods, ie create / delete / update 50 objects at once
			[]bulk subscribe
			[]bulk amend
			[]bulk update
			[]bulk create
DONE:
	[x]account model
	[x]contact model
	[x]invoice model
	[x]invoice_item model
	[x]payment model
	[x]subscription model
	[x]base model
	[x]extend base to query objects
	[x]make where take symbols and values
	[x]make query response map things to an object
	[x]make default values
	[x]contact model and tests 6/18
	[x]subscription model ( query and update ) 6/18
	[x]take the username and password out of the config file and have it be set 6/18
	[x]make all the field name be symbols instead of strings 6/18
	[x]session model base
	[x]update, make it only send new values, i.e ones that were set, not the ones that were queried 6/19
	[x]payment_method model 6/19
	[x]subscribe base 6/19
	[x]subscribe with one product rate plan 6/20
	[x]Product model
	[x]Product Rate Plan model
	[x]Product Rate Plan Charge model
 	[x]Product Rate Plan Charge Tier model
 	[x]tests for subsription -> subscribe helper method